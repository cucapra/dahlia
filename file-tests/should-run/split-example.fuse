decl a: bit<32>[12 bank 6];
decl result: bit<32>[4];
decl filter: bit<32>[3 bank 3];

split v = a[by 3];
// The pattern represented by sh_v cannot be recreated without split.
view sh_v = v[_ :][_ : bank 1];

for (let j = 0..4) {
  for (let i = 0..3) unroll 3 {
    let x = filter[i] * sh_v[i][j];
  } combine {
    result[j] += x;
  }
}
