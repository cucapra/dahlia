import "primitives/std.lib";
import "primitives/bitnum/math.futil";
import "primitives/fixed/math.futil";
component main() -> () {
  cells {
    const0 = std_const(32,1);
    f_0 = std_reg(32);
    fp_const0 = std_const(32,65536);
    fp_sqrt0 = fp_sqrt(32,16,16);
    i_0 = std_reg(32);
    sqrt0 = sqrt(32);
  }
  wires {
    group let0 {
      i_0.in = sqrt0.out;
      i_0.write_en = 1'd1;
      let0[done] = i_0.done;
    }
    group let1 {
      f_0.in = fp_sqrt0.out;
      f_0.write_en = 1'd1;
      let1[done] = f_0.done;
    }
  }
  control {
    par {
      seq {
        invoke sqrt0(in=const0.out)();
        let0;
      }
      seq {
        invoke fp_sqrt0(in=fp_const0.out)();
        let1;
      }
    }
  }
}
