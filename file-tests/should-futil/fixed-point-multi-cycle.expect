import "primitives/std.lib";
component main() -> () {
  cells {
    b_0 = std_reg(2);
    bin_read0_0 = std_reg(2);
    bin_read1_0 = std_reg(1);
    const0 = std_const(1,1);
    const1 = std_const(1,1);
    d_0 = std_reg(1);
    fp_const0 = std_const(2,2);
    fp_const1 = std_const(2,2);
    mult_pipe0 = std_fp_mult_pipe(2,1,1);
    mult_pipe1 = std_smult_pipe(1);
  }
  wires {
    group let0 {
      bin_read0_0.in = mult_pipe0.out;
      bin_read0_0.write_en = mult_pipe0.done;
      let0[done] = bin_read0_0.done;
      mult_pipe0.left = fp_const0.out;
      mult_pipe0.right = fp_const1.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let1<"static"=1> {
      b_0.in = bin_read0_0.out;
      b_0.write_en = 1'd1;
      let1[done] = b_0.done;
    }
    group let2 {
      bin_read1_0.in = mult_pipe1.out;
      bin_read1_0.write_en = mult_pipe1.done;
      let2[done] = bin_read1_0.done;
      mult_pipe1.left = const0.out;
      mult_pipe1.right = const1.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group let3<"static"=1> {
      d_0.in = bin_read1_0.out;
      d_0.write_en = 1'd1;
      let3[done] = d_0.done;
    }
  }
  control {
    par {
      seq {
        let0;
        let1;
      }
      seq {
        let2;
        let3;
      }
    }
  }
}
