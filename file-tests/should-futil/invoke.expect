import "primitives/std.lib";
component foo(a: 32) -> (out: 32) {
  cells {
    temp_0 = prim std_reg(32);
  }
  wires {
    group let2<"static"=1> {
      temp_0.in = a;
      temp_0.write_en = 1'd1;
      let2[done] = temp_0.done;
    }
    out = temp_0.out;
  }
  control {
    let2;
  }
}
component main() -> () {
  cells {
    b_0 = prim std_reg(32);
    c_0 = prim std_reg(32);
    const0 = prim std_const(32,1);
    foo0 = foo;
  }
  wires {
    group let0<"static"=1> {
      b_0.in = const0.out;
      b_0.write_en = 1'd1;
      let0[done] = b_0.done;
    }
    group let1 {
      c_0.in = foo0.out;
      c_0.write_en = 1'd1;
      let1[done] = c_0.done;
    }
  }
  control {
    seq {
      let0;
      invoke foo0(a=b_0.out)();
      let1;
    }
  }
}
