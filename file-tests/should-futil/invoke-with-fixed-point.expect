import "primitives/std.lib";
component foo(x: 8) -> (out: 8) {
  cells {
    slice1 = std_slice(8,8);
    y_0 = std_reg(8);
  }
  wires {
    group let2<"static"=1> {
      y_0.in = slice1.out;
      y_0.write_en = 1'd1;
      let2[done] = y_0.done;
      slice1.in = x;
    }
    out = y_0.out;
  }
  control {
    let2;
  }
}
component main() -> () {
  cells {
    foo0 = foo();
    fp_const0 = std_const(8,16);
    slice0 = std_slice(8,8);
    tmp_0 = std_reg(8);
    x_0 = std_reg(8);
  }
  wires {
    group let0<"static"=1> {
      x_0.in = slice0.out;
      x_0.write_en = 1'd1;
      let0[done] = x_0.done;
      slice0.in = fp_const0.out;
    }
    group let1 {
      tmp_0.in = foo0.out;
      tmp_0.write_en = 1'd1;
      let1[done] = tmp_0.done;
    }
  }
  control {
    seq {
      let0;
      invoke foo0(x=x_0.out)();
      let1;
    }
  }
}
