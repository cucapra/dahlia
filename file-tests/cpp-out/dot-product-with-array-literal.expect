#include "parser.cpp"
/***************** Parse helpers  ******************/
/***************************************************/
void kernel(vector<int> a0, int result) {
  
  int b0[4] {3, 5, 7, 11};
  int res = 0;
  for(int i = 0; i < 4; i++) {
    int v = (a0[i] * b0[i]);
    // combiner:
    res += v;
  }
  result = res;
  json_t __;
  __["a0"] = a0;
  __["result"] = result;
  std::cout << __.dump(2) << std::endl;
}
int main(int argc, char** argv) {
  using namespace flattening;
  auto v = parse_data(argc, argv);;
  auto a0 = get_arg<n_dim_vec_t<int, 1>>("a0", "bit<32>[]", v);
  auto result = get_arg<int>("result", "int", v);
  kernel(a0, result);
  return 0;
}
